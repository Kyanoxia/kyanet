---
import { Image } from 'astro:assets';

export const prerender = false;

const pageTitle = "Skycord";
const pageDescription = "Skycord - Announce Bluesky posts in Discord!";
const pageImage = "https://cdn.bsky.app/img/avatar/plain/did:plc:u3dq2oxini2x66rmze2llu4v/bafkreiakrtm4n3q2qbyuuiizhrxvh2lbopueojtyzirzeqi34sn5ee554i@jpeg";
const pageColor = "#5AB8FE";

const identity = {
	name: "Kyanoxia Rivera",
	country: "United States",
	nickname: "Kya",
	pronouns: "she/her",
	race: "Human Fox Hybrid",
	occupation: "Graphic Designer",
	iteration: 0
};

import KFooter from "../components/KFooter.astro";
import "../styles/global.css";
---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="svg//favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		
		<meta property="og:site_name" content="The Kyanet" />
		<meta property="og:title" content=`${pageTitle}` />
		<meta property="og:description" content=`${pageDescription}` />
		<meta property="og:image" content=`${pageImage}` />

		<meta name="twitter:card" content="summary" />
		<meta name="twitter:site" content="The Kyanet" />
		<meta name="twitter:title" content=`${pageTitle}` />
		<meta name="twitter:description" content=`${pageDescription}` />
		<meta name="twitter:url" content=`https://kyanoxia.com/`>
		<meta name="twitter:image" content=`${pageImage}` />

		<meta itemprop="name" content=`${pageTitle}` />
		<meta itemprop="description" content=`${pageDescription}` />
		<meta itemprop="image" content=`${pageImage}` />

		<meta name="theme-color" content=`${pageColor}` />

		<title>{pageTitle}</title>

		<link rel="sitemap" href="/sitemap-index.xml" />

		<script is:inline src="https://kit.fontawesome.com/6a9ec12e2e.js" crossorigin="anonymous"></script>
	</head>
	<body style="background: linear-gradient(-45deg, rgba(11,122,255,1), rgba(90,184,254,1)); background-repeat: no-repeat; background-attachment: fixed;">
		<div class="spacer"></div>
		<div class="content center" style="text-align: center; max-width: 80ch; margin: auto 1em; padding: 2em; background-color: white; border-radius: 15px; box-shadow: 0px 0px 50px rgba(0, 0, 0, .25); height: 100%">
            <img src="svg/Skycord.svg" alt="Discord logo Clyde with Bluesky's wings. The logo for Skycord with the text 'Skycord' underneath it." class="skycordlogo">
			<div class="spacer"></div>
            <h1 style="color: black; font-weight: 500; font-size: xx-large">Announcements in your servers</h1>
			<p style="color: black;">Skycord is an expert-coded Discord bot created for the sole purpose of announcing your new Bluesky posts in any channel you want.  Simply add the bot, and use the /connect command to subscribe to your account!</p>
			<img src="img/skycord-example.png" alt="Screenshot of a Discord embed posted by Skycord." style="border-radius: 10px; width: 100%; max-width: 500px;">
			<div class="spacer"></div>
			<div class="hstack" style="width: 100%; justify-content: center;">
				<a href="https://github.com/kyanoxia/skycord" style="background-color: #369cff; padding: 10px; border-radius: 7px; margin: 5px;">Get it on GitHub</a>
				<a href="https://discord.com/oauth2/authorize?client_id=1297227452707373267" style="background-color: #369cff; padding: 10px; border-radius: 7px; margin: 5px;">Invite to Server</a>
			</div>
		</div>
		<div class="spacer"></div>
		<KFooter page=`${pageTitle}` color="white" />

        <script is:inline>
            const convertImages = (query, callback) => {
                const images = document.querySelectorAll(query);

                images.forEach(image => {
                    fetch(image.src)
                    .then(res => res.text())
                    .then(data => {
                        const parser = new DOMParser();
                        const svg = parser.parseFromString(data, 'image/svg+xml').querySelector('svg');

                        if (image.id) svg.id = image.id;
                        if (image.className) svg.classList = image.classList;

                        image.parentNode.replaceChild(svg, image);
                    })
                    .then(callback)
                    .catch(error => console.error(error))
                });
            }

            convertImages('img');
        </script>
	</body>
</html>
